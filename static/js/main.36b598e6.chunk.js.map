{"version":3,"sources":["components/Block/styles.ts","components/Block/index.tsx","components/Logs/styles.ts","components/Logs/index.tsx","pages/Blockchain/styles.ts","pages/Blockchain/index.tsx","routes/index.tsx","global.styles.ts","App.tsx","index.tsx"],"names":["Container","styled","div","Paragraph","h3","span","Index","T","b","Input","input","ButtonMessUp","button","Block","config","changeData","index","useState","data","newData","setNewData","editing","setEditing","toggleEdit","useEffect","container","document","getElementById","scrollTop","scrollHeight","onClick","value","disabled","timestamp","onChange","opt","target","previousHash","hash","nonce","Title","h2","p","Variant","variant","Logs","logs","id","map","log","content","v4","BlocksContainer","LogContainer","ButtonContainer","Button","h1","Description","h4","IconGithub","BsGithub","baseModalStyle","top","left","right","bottom","marginRight","transform","backgroundColor","border","width","display","flexDirection","alignItems","overlay","chartModalStyle","Blockchain","a","chain","setChain","miningGenesisBlock","mineNewBlock","mineNewBlocks","generatingChart","modals","setModals","DateTime","now","setLocale","toLocaleString","DATETIME_SHORT_WITH_SECONDS","setLogs","difficulty","setDifficulty","mining","setMining","message","status","newLog","s","calcHash","SHA256","JSON","stringify","toString","getLatestBlock","length","mineBlock","block","blockCopy","startTime","Promise","resolve","reject","substring","Array","from","join","duration","diff","toObject","miningDuration","seconds","milliseconds","error","toggleModal","modal","addBlock","newBlock","chainCopy","messedBlock","find","indexOf","getChainDurations","Modal","setAppElement","href","style","height","setTimeout","baseData","Math","floor","random","then","miningNewBlock","arrHundredIterations","newBlocks","reduce","chained","currentChain","chainExtension","miningNewBlocks","every","idx","previousBlock","isOpen","type","max","min","e","Number","justifyContent","color","margin","series","name","options","theme","mode","chart","stacked","colors","dataLabels","enabled","stroke","curve","legend","show","fill","gradient","opacityFrom","opacityTo","tooltip","y","formatter","v","xaxis","c","toFixed","Routes","path","element","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.36b598e6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 900px;\n  margin: 0 12px 6px 12px;\n\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n\n  border: 1px solid gray;\n  padding: 24px;\n  border-radius: 8px;\n\n  position: relative;\n`;\n\nexport const Title = styled.h3``;\n\nexport const Span = styled.span``;\n\nexport const Paragraph = styled.span`\n  font-size: 1.3em;\n  margin: 4px;\n`;\n\nexport const Index = styled.span`\n  position: absolute;\n\n  font-size: 2em;\n\n  top: 32px;\n  right: 32px;\n`;\n\nexport const T = styled.b`\n  color: blueviolet;\n`;\n\nexport const Input = styled.input`\n  width: 500px;\n  height: 30px;\n  padding: 6px;\n\n  color: #c0c0c0;\n  border: 1px solid #c0c0c0;\n  background-color: transparent;\n\n  outline: none;\n  border-radius: 4px;\n  font-size: 1em;\n\n  &:disabled {\n    opacity: 0.9;\n    border: none;\n  }\n`;\n\nexport const ButtonMessUp = styled.button`\n  width: fit-content;\n  position: absolute;\n  height: 30px;\n  padding: 24px;\n  margin: 24px;\n\n  bottom: 12px;\n  right: 12px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  color: #c0c0c0;\n  border: 1px solid #c0c0c0;\n  background-color: transparent;\n\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 1.5em;\n\n  &:hover {\n    color: black;\n    border: 1px solid #c0c0c0;\n    background-color: #c0c0c0;\n  }\n\n  &:active {\n    color: black;\n    border: 1px solid white;\n    background-color: white;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport * as S from './styles';\n\nimport { IProps } from './types';\n\nconst Block: React.FC<IProps> = ({ config, changeData, index }) => {\n  const [newData, setNewData] = useState(config.data);\n  const [editing, setEditing] = useState(false);\n\n  const toggleEdit = (): void => {\n    setEditing(!editing);\n  };\n\n  const saveEdit = (): void => {\n    toggleEdit();\n    changeData(config.index, newData);\n  };\n\n  useEffect(() => {\n    const container = document.getElementById('blocks-container');\n    if (container) container.scrollTop = container?.scrollHeight || 0;\n  }, [config]);\n\n  return (\n    <S.Container>\n      {index !== 0 &&\n        (editing ? (\n          <S.ButtonMessUp onClick={saveEdit}>Save</S.ButtonMessUp>\n        ) : (\n          <S.ButtonMessUp onClick={toggleEdit}>\n            Mess up with the data\n          </S.ButtonMessUp>\n        ))}\n      <S.Index>#{index + 1}</S.Index>\n      <S.Paragraph>\n        <S.T>Index: </S.T>\n        <S.Input value={config.index} disabled />\n      </S.Paragraph>\n      <S.Paragraph>\n        <S.T>Timestamp: </S.T>\n        <S.Input value={config.timestamp} disabled />\n      </S.Paragraph>\n      <S.Paragraph>\n        <S.T>Data: </S.T>\n        <S.Input\n          value={newData}\n          disabled={!editing}\n          onChange={(opt) => setNewData(opt.target.value)}\n        />\n      </S.Paragraph>\n      <S.Paragraph>\n        <S.T>Previous Hash: </S.T>\n        <S.Input value={config.previousHash || 'none'} disabled />\n      </S.Paragraph>\n      <S.Paragraph>\n        <S.T>Hash: </S.T>\n        <S.Input value={config.hash} disabled />\n      </S.Paragraph>\n      <S.Paragraph>\n        <S.T>Nonce: </S.T>\n        <S.Input value={config.nonce} disabled />\n      </S.Paragraph>\n    </S.Container>\n  );\n};\n\nexport default Block;\n","import styled from 'styled-components';\nimport { LogStatus } from './types';\n\nexport const Container = styled.div`\n  width: 332px;\n  height: 100%;\n  margin: 0 12px;\n\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-direction: column;\n  overflow-y: auto;\n\n  border: 1px solid gray;\n  border-radius: 8px;\n\n  position: relative;\n\n  p:nth-child(2n) {\n    background-color: #29292990;\n  }\n`;\n\nexport const Title = styled.h2`\n  width: 100%;\n  text-align: center;\n  margin: 12px 0 12px 0;\n`;\n\nexport const Span = styled.span``;\n\nexport const Paragraph = styled.p`\n  width: calc(100% - 48px);\n  font-size: 1.3em;\n  padding: 12px 24px;\n  margin: 8px 0;\n  white-space: pre-line;\n`;\n\nexport const Variant = styled.span<{ variant: LogStatus }>`\n  color: ${({ variant }) => {\n    switch (variant) {\n      default:\n      case 'normal':\n        return 'white';\n      case 'failure':\n        return '#c1121f';\n      case 'success':\n        return '#70e000';\n      case 'idle':\n        return '#ffd60a';\n    }\n  }};\n`;\n\nexport const T = styled.b`\n  color: blueviolet;\n`;\n\nexport const Input = styled.input`\n  width: 500px;\n  height: 30px;\n  padding: 6px;\n\n  color: #c0c0c0;\n  border: 1px solid #c0c0c0;\n  background-color: transparent;\n\n  outline: none;\n  border-radius: 4px;\n  font-size: 1em;\n\n  &:disabled {\n    opacity: 0.9;\n    border: none;\n  }\n`;\n\nexport const ButtonMessUp = styled.button`\n  width: fit-content;\n  position: absolute;\n  height: 30px;\n  padding: 24px;\n  margin: 24px;\n\n  top: 12px;\n  right: 12px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  color: #c0c0c0;\n  border: 1px solid #c0c0c0;\n  background-color: transparent;\n\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 1.5em;\n\n  &:hover {\n    color: black;\n    border: 1px solid #c0c0c0;\n    background-color: #c0c0c0;\n  }\n\n  &:active {\n    color: black;\n    border: 1px solid white;\n    background-color: white;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { v4 } from 'uuid';\n\nimport * as S from './styles';\n\nimport { IProps } from './types';\n\nconst Logs: React.FC<IProps> = ({ logs }) => {\n  useEffect(() => {\n    const container = document.getElementById('log-container');\n    if (container) container.scrollTop = container?.scrollHeight || 0;\n  }, [logs]);\n\n  return (\n    <S.Container id=\"log-container\">\n      <S.Title>Log</S.Title>\n      {logs.map((log) => (\n        <S.Paragraph key={v4()}>\n          <S.T>{log.timestamp}</S.T> <br />\n          <S.Variant variant={log.variant}> {log.content} </S.Variant>\n        </S.Paragraph>\n      ))}\n    </S.Container>\n  );\n};\n\nexport default Logs;\n","import styled from 'styled-components';\n\nimport { BsGithub } from 'react-icons/bs';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: center;\n  overflow: auto;\n`;\n\nexport const BlocksContainer = styled.div`\n  width: 1000px;\n  height: calc(100vh - 150px);\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  overflow-y: auto;\n`;\nexport const LogContainer = styled.div`\n  width: 336px;\n  height: calc(100vh - 150px);\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n  height: 30px;\n  padding: 24px;\n  margin: 24px 24px 0 24px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  color: #c0c0c0;\n  border: 1px solid #c0c0c0;\n  background-color: transparent;\n\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 1.3em;\n\n  &:hover {\n    color: black;\n    border: 1px solid #c0c0c0;\n    background-color: #c0c0c0;\n  }\n\n  &:active {\n    color: black;\n    border: 1px solid white;\n    background-color: white;\n  }\n`;\n\nexport const Title = styled.h1`\n  width: 100%;\n  text-align: center;\n  margin: 24px 0 0 0;\n`;\n\nexport const Description = styled.h4`\n  width: 100%;\n  text-align: center;\n  margin: 24px 0 0 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: -18px 0 0 0;\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nexport const Span = styled.span``;\n\nexport const Paragraph = styled.span`\n  font-size: 1.5em;\n`;\n\nexport const IconGithub = styled(BsGithub)`\n  width: 24px;\n  height: 24px;\n  color: white;\n  margin: 0 12px;\n`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState } from 'react';\nimport SHA256 from 'crypto-js/sha256';\nimport Modal from 'react-modal';\nimport { default as ApexChart } from 'react-apexcharts';\n\nimport { DateTime } from 'luxon';\nimport { v4 } from 'uuid';\n\nimport Block from '../../components/Block';\nimport Logs from '../../components/Logs';\n\nimport { IBlock } from '../../components/Block/types';\nimport { Log, LogStatus } from '../../components/Logs/types';\n\nimport * as S from './styles';\nimport { Input, T } from '../../components/Block/styles';\n\nconst baseModalStyle: ReactModal.Styles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#393739',\n    border: '1px solid gray',\n    width: '400px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  overlay: {\n    backgroundColor: '#11111190',\n  },\n};\n\nconst chartModalStyle: ReactModal.Styles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#393739',\n    border: '1px solid gray',\n    width: '1000px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  overlay: {\n    backgroundColor: '#11111190',\n  },\n};\n\nconst Blockchain: React.FC = () => {\n  /* The blockchain object itself  */\n  const [chain, setChain] = useState<IBlock[]>([]);\n\n  /* Modal states */\n  const [modals, setModals] = useState<{ [key: string]: boolean }>({\n    miningGenesisBlock: false,\n    mineNewBlock: false,\n    mineNewBlocks: false,\n    generatingChart: false,\n  });\n\n  /* Logger control list */\n  const [logs, setLogs] = useState<Log[]>([\n    {\n      content: 'Fresh start!',\n      timestamp: DateTime.now()\n        .setLocale('pt-BR')\n        .toLocaleString(DateTime.DATETIME_SHORT_WITH_SECONDS),\n      variant: 'normal',\n    },\n  ]);\n\n  /* Difficulty of the proof of work and mining status */\n  const [difficulty, setDifficulty] = useState(1);\n  const [mining, setMining] = useState(false);\n\n  /** Makes a new entrie on the log field. */\n  const log = (message: string, status: LogStatus): void => {\n    const newLog: Log = {\n      content: message,\n      timestamp: DateTime.now()\n        .setLocale('pt-BR')\n        .toLocaleString(DateTime.DATETIME_SHORT_WITH_SECONDS),\n      variant: status,\n    };\n\n    setLogs((s) => [...s, newLog]);\n  };\n\n  /** Calculates the hash for the block passed as parameter. */\n  const calcHash = ({\n    index,\n    timestamp,\n    data,\n    previousHash,\n    nonce,\n  }: IBlock): string => {\n    const newHash = SHA256(\n      index + previousHash + timestamp + JSON.stringify(data) + nonce,\n    ).toString();\n    return newHash;\n  };\n\n  /** Returns the lastest block of the chain. */\n  const getLatestBlock = (): IBlock => chain[chain.length - 1];\n\n  /** Executes the 'Proof of Work' for the passed Block returning the resultant Block. */\n  const mineBlock = async (\n    block: IBlock,\n    difficulty: number,\n  ): Promise<IBlock> => {\n    const blockCopy: IBlock = { ...block };\n\n    log(`⛏️ Starting block mining...`, 'idle');\n\n    const startTime = DateTime.now().setLocale('pt-BR');\n\n    return new Promise((resolve, reject) => {\n      try {\n        while (\n          blockCopy.hash?.substring(0, difficulty) !==\n          Array.from({ length: difficulty }, () => '0').join('')\n        ) {\n          blockCopy.nonce = v4();\n          blockCopy.hash = calcHash(blockCopy);\n        }\n\n        const endTime = DateTime.now().setLocale('pt-BR');\n\n        const duration = endTime\n          .diff(startTime, ['seconds', 'milliseconds'])\n          .toObject();\n\n        blockCopy.miningDuration = duration;\n\n        log(\n          `🕓 Finishing block mining \\n after ${duration.seconds} seconds and ${duration.milliseconds} milliseconds...`,\n          'success',\n        );\n\n        resolve(blockCopy);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  /** Toggle the modal which key is passed by parameter. */\n  const toggleModal = (modal: string): void =>\n    setModals((s) => ({ ...s, [modal]: !modals[modal] }));\n\n  /** Deals with the block mining requested. */\n  const handleGenesisBlockMining = (): void => {\n    setMining(true);\n    setTimeout(() => {\n      const timestamp = DateTime.now()\n        .setLocale('pt-BR')\n        .toLocaleString(DateTime.DATETIME_SHORT_WITH_SECONDS);\n      const baseData = {\n        index: v4(),\n        timestamp,\n        data: 'genesis',\n        previousHash: '0',\n        nonce: v4(),\n      };\n      addBlock({\n        ...baseData,\n        hash: calcHash(baseData),\n      });\n      setMining(false);\n      toggleModal('miningGenesisBlock');\n    }, 10);\n  };\n\n  /** Handler for add new block button */\n  const handleNewBlockMining = (): void => {\n    toggleModal('miningNewBlock');\n    setTimeout(() => {\n      const timestamp = DateTime.now()\n        .setLocale('pt-BR')\n        .toLocaleString(DateTime.DATETIME_SHORT_WITH_SECONDS);\n      const baseData = {\n        data: `transaction: ${Math.floor(\n          Math.random() * (15000 - 1000) + 100,\n        )}`,\n        index: v4(),\n        nonce: v4(),\n        timestamp,\n      };\n      addBlock({\n        ...baseData,\n        hash: calcHash(baseData),\n      }).then(() => setModals(() => ({ miningNewBlock: false })));\n    }, 10);\n  };\n\n  /** Handler for the 100 blocks mining button */\n  const handleHundredBlockMining = (): void => {\n    toggleModal('miningNewBlocks');\n    setTimeout(async () => {\n      const arrHundredIterations: any[] = Array.from(\n        { length: 100 },\n        () => null,\n      );\n\n      const newBlocks = arrHundredIterations.reduce(\n        async (chained: IBlock[]) => {\n          const currentChain = await chained;\n\n          const timestamp = DateTime.now()\n            .setLocale('pt-BR')\n            .toLocaleString(DateTime.DATETIME_SHORT_WITH_SECONDS);\n\n          const block: IBlock = {\n            data: `transaction: ${Math.floor(\n              Math.random() * (15000 - 1000) + 100,\n            )}`,\n            index: v4(),\n            nonce: v4(),\n            timestamp,\n          };\n\n          if (currentChain.length === 0) {\n            block.previousHash = getLatestBlock()?.hash;\n          } else {\n            block.previousHash = currentChain[currentChain.length - 1]?.hash;\n          }\n\n          block.hash = calcHash(block);\n\n          return [...currentChain, await mineBlock(block, difficulty)];\n        },\n        [],\n      );\n\n      const chainExtension = await newBlocks;\n\n      setModals(() => ({ miningNewBlocks: false }));\n      setChain((s) => [...s, ...chainExtension]);\n    }, 10);\n  };\n\n  /** Calls the block miner and appends the new block to the end of the chain. */\n  const addBlock = async (newBlock: IBlock): Promise<void> => {\n    log('🆕 Adding new block...', 'normal');\n\n    newBlock.previousHash = getLatestBlock()?.hash || '';\n    newBlock.hash = calcHash(newBlock);\n\n    newBlock = await mineBlock(newBlock, difficulty);\n\n    log(`✅ New block added. Number of blocks: ${chain.length + 1}`, 'success');\n    setChain((s) => [...s, newBlock]);\n  };\n\n  /** Changes the block data based on the given parameters. */\n  const changeData = (index: string, data: string): void => {\n    const chainCopy = [...chain];\n    const messedBlock = chain.find((b) => b.index === index);\n\n    if (messedBlock) {\n      chainCopy[chainCopy.indexOf(messedBlock)].data = data;\n      setChain(chainCopy);\n    }\n  };\n\n  /** Check the entire chain after any kind of modification. */\n  const validateChain = (): boolean => {\n    log('Checking the integrity of the chain...', 'normal');\n    return chain.every((block, idx, chain) => {\n      if (idx > 0) {\n        const previousBlock = chain[idx - 1];\n\n        /* Check the integrity of the block hash */\n        if (block.hash !== calcHash(block)) {\n          log(`Block #${idx + 1} check failed.`, 'failure');\n          return false;\n        }\n\n        /* Check if the current block hash is equal to the previous block hash */\n        if (block.previousHash !== previousBlock.hash) {\n          log(`Block #${idx + 1} check failed.`, 'failure');\n          return false;\n        }\n\n        log(`Block #${idx + 1} checked.`, 'idle');\n        return true;\n      }\n\n      log(`Block #${idx + 1} checked.`, 'idle');\n      return true;\n    });\n  };\n\n  /** Clears the blockchain and the log history. */\n  const resetAll = (): void => {\n    setChain([]);\n    setLogs([]);\n  };\n\n  /** Returns all the chain durations in milliseconds */\n  const getChainDurations = (): number[] =>\n    chain.map(\n      (block) =>\n        (block.miningDuration?.seconds || 0) * 1000 +\n        (block.miningDuration?.milliseconds || 0),\n    );\n\n  /** Return the average of the given number array */\n  const average = (a: number[]): number =>\n    a.reduce((p: number, c: number) => p + c, 0) / a.length;\n\n  useEffect(() => {\n    Modal.setAppElement('body');\n  }, []);\n\n  return (\n    <S.Container>\n      <S.Title>blockchain visualizer</S.Title>\n      <S.Description>\n        <S.IconGithub />\n        <a href=\"https://www.github.com/lucasalme1da\">lucasalme1da</a>{' '}\n      </S.Description>\n      <S.LogContainer>\n        <Logs logs={logs} />\n      </S.LogContainer>\n      <S.BlocksContainer id=\"blocks-container\">\n        {chain.length ? (\n          chain.map((block, index) => (\n            <Block\n              key={block.index}\n              config={block}\n              changeData={changeData}\n              index={index}\n            />\n          ))\n        ) : (\n          <S.Paragraph\n            style={{ height: '100%', display: 'flex', alignItems: 'center' }}\n          >\n            Add a genesis block to start the blockchain.\n          </S.Paragraph>\n        )}\n        <S.ButtonContainer>\n          {chain.length === 0 ? (\n            <S.Button\n              onClick={() => {\n                toggleModal('miningGenesisBlock');\n              }}\n            >\n              + Add genesis block\n            </S.Button>\n          ) : (\n            <>\n              <S.Button onClick={handleNewBlockMining}>\n                + Add new block\n              </S.Button>\n              <S.Button onClick={handleHundredBlockMining}>\n                + Add 100 blocks (very slow!!)\n              </S.Button>\n            </>\n          )}\n          <S.Button\n            onClick={() => {\n              validateChain()\n                ? log('🟢 This blockchain is valid!', 'success')\n                : log('🔴 This blockchain is invalid!', 'failure');\n            }}\n          >\n            Check validity\n          </S.Button>\n          <S.Button onClick={resetAll}>Reset everything</S.Button>\n          <S.Button onClick={() => toggleModal('generatingChart')}>\n            Generate chart\n          </S.Button>\n        </S.ButtonContainer>\n      </S.BlocksContainer>\n\n      <Modal isOpen={modals.miningGenesisBlock} style={baseModalStyle}>\n        <S.Paragraph>\n          <T>Choose the difficulty: </T>\n          <Input\n            value={difficulty}\n            type=\"number\"\n            max=\"5\"\n            min=\"1\"\n            style={{ width: '50px' }}\n            onChange={(e) => setDifficulty(Number(e.target.value))}\n          />\n        </S.Paragraph>\n        <S.ButtonContainer style={{ justifyContent: 'center' }}>\n          <S.Button onClick={() => toggleModal('miningGenesisBlock')}>\n            Cancel\n          </S.Button>\n          <S.Button\n            color=\"primary\"\n            onClick={handleGenesisBlockMining}\n            disabled={mining}\n          >\n            {mining ? 'Mining block...' : 'Confirm'}\n          </S.Button>\n        </S.ButtonContainer>\n      </Modal>\n\n      <Modal isOpen={modals.miningNewBlock} style={baseModalStyle}>\n        <S.Paragraph>\n          <T>Mining block... </T>\n        </S.Paragraph>\n      </Modal>\n\n      <Modal isOpen={modals.miningNewBlocks} style={baseModalStyle}>\n        <S.Paragraph>\n          <T>Mining blocks... </T>\n        </S.Paragraph>\n      </Modal>\n\n      <Modal isOpen={modals.generatingChart} style={chartModalStyle}>\n        <S.Paragraph style={{ margin: '20px' }}>\n          <T>Duration (ms) of the minings (with difficulty = {difficulty})</T>\n        </S.Paragraph>\n\n        <ApexChart\n          series={[\n            {\n              name: 'Duration',\n              data: getChainDurations(),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: 'dark',\n            },\n            chart: {\n              type: 'area',\n              height: 350,\n              stacked: true,\n            },\n            colors: ['#8a2be2'],\n            dataLabels: {\n              enabled: false,\n            },\n            stroke: {\n              curve: 'smooth',\n            },\n            legend: {\n              show: false,\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              },\n            },\n            tooltip: {\n              y: {\n                formatter: (v) => `${v} ms`,\n              },\n            },\n            xaxis: {\n              type: 'category',\n            },\n          }}\n          width={950}\n          height={400}\n          type=\"area\"\n        />\n\n        <S.Paragraph>\n          <T style={{ color: 'white' }}>\n            Average (ms) of the mining durations:{' '}\n            {average(getChainDurations()).toFixed(2)} ms\n          </T>\n        </S.Paragraph>\n\n        <S.ButtonContainer style={{ justifyContent: 'center' }}>\n          <S.Button onClick={() => toggleModal('generatingChart')}>\n            Close\n          </S.Button>\n        </S.ButtonContainer>\n      </Modal>\n    </S.Container>\n  );\n};\n\nexport default Blockchain;\n","import React from 'react';\nimport { Route, HashRouter, Routes as Switch } from 'react-router-dom';\n\nimport Blockchain from '../pages/Blockchain';\n\nconst Routes: React.FC = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" element={<Blockchain />} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n\n    @import url('https://fonts.googleapis.com/css2?family=Red+Hat+Display:wght@300;400;500;700&display=swap');\n\n    body > #root > div {\n      height: 100vh;\n    }\n\n    body {\n\n    background: #101010;\n    color: lightgray;\n    font-family: 'Red Hat Display', sans-serif;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    font-size: 14px;\n    width: 100vw;\n    height: 100vh;\n\n    top: 0px !important;\n\n    /* ===== Scrollbar CSS ===== */\n  /* Firefox */\n  * {\n    scrollbar-width: none;\n    scrollbar-color: #393739 #292929;\n  }\n\n  /* Chrome, Edge, and Safari */\n  *::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  *::-webkit-scrollbar-track {\n    background: #292929;\n  }\n\n  *::-webkit-scrollbar-thumb {\n    background-color: #393739;\n    border-radius: 10px;\n    border: 3px groove #878787;\n  }\n  }\n\n  svg.apexcharts-svg { background: transparent !important; }\n\n\n`;\n","import React from 'react';\nimport Routes from './routes';\n\nimport { GlobalStyle } from './global.styles';\n\nconst App: React.FC = () => (\n  <>\n    <Routes />\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}